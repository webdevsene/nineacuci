{% extends 'base.html.twig' %}

{% block title %}New FluxDesTresoreries{% endblock %}
{% block stylesheets %}
    <link href="{{ asset('admin/dist/assets/libs/sweetalert2/sweetalert2.min.css')}}" rel="stylesheet" type="text/css" />
    <!-- Responsive Table css -->
    <link href="{{ asset('admin/dist/assets/libs/admin-resources/rwd-table/rwd-table.min.css')}}" rel="stylesheet" type="text/css" />


{% endblock %}

{% block body %}

    

<div class="row">
    <div class="col-xl-12">

        <!-- start page title -->
       <div class="row">
       <div class="col-12">
       
       
           <div class="page-title-box d-sm-flex align-items-center justify-content-between">
               
       
               <div class="page-title-right">
                   <ol class="breadcrumb m-0">
                       <li class="breadcrumb-item"><a href="javascript: void(0);">Saisie des états des flux des trésoreries</a></li>
                       <li class="breadcrumb-item active">Nouvelle saisie</li>  <hr class="bg-info">
                   </ol>
               </div>
       
           </div>
       </div>
       </div>
       <!-- end page title -->

        <!-- debut form -->
        
<div class="card" style=" margin: 0%;padding: 0%;-webkit-box-shadow:0 1rem 3rem rgba(0,0,0,.175);box-shadow:0 1rem 3rem rgba(0,0,0,.175)">
    <form method="post" action="{{path('flux_des_tresoreries_new')}}" id="idformfluxtresor" name="idformfluxtresor">
    <div class="card-body " style="margin: 0%;padding: 0%;">
        <div class="row">
        <div class="col-xl-12"> 
       
        <table class="table table-bordered mt-5">
                 <tr>
                  <td>Numéro d'identification :<span style="color:red">*</span>
                      <input type="text"  class="form-control form-control-sm" name="idcuci" id="idcuci"></td>
                  <td>Designation entité :<span style="color:red">*</span>
                      <input type="text" disabled class="form-control form-control-sm" name="denomination" id="denomination"></td>
                  <td>Année financière :<span style="color:red">*</span>
                      <input type="text" class="form-control form-control-sm" name="annee" id="annee"></td>
                 </tr>
        </table>
         
             <div class="card">
                 <div class="card-body">

                     <div class="d-flex flex-wrap gap-2 justify-content-center">
                         <button type="button" class="btn btn-secondary waves-effect waves-light" name="resetBtn" id="resetBtn">
                             <i class="bx bx-error font-size-16 align-middle me-2"></i> Effacer les données
                         </button>
                         <button type="submit" class="btn btn-success waves-effect waves-light" id="saveBtn" name="saveBtn">
                             <i class="bx bx-check-double font-size-16 align-middle me-2"></i> Sauvegarder
                         </button>
                         {#<button type="button" class="btn btn-dark bg-soft opacity-25" name="valider" id="valider">#}
                         <button type="button" class="btn btn-dark bt-soft waves-effect waves-light" name="valider" id="valider">
                             <i class="bx bx-block font-size-16 align-middle me-2"></i> Valider la saisie
                         </button>
                     </div>
                 </div>
             </div>
         </div>

         <div class="col-12">
            <div class="table-responsive">
                <table name="form2" id="form2" class="table table-bordered table-striped">
                    <thead style="color: white;">
                        <tr class=" opacity-80" style="background: #008000;">
                            <th scope="col" colspan="2" class="text-center ">
                            </th>
                            <th scope="col" colspan="3" class="text-center">
                            </th>
                            <th colspan="4" scope="col" class="text-center text-white">
                              Exercice au 31/12/<span class="text-info" id="anneeN"></span> 
                            </th>
                            <th colspan="3" scope="col" class="text-center text-white">
                              Exercice au 31/12/<span class="text-info" id="anneeN-1"></span>
                            </th>
                          </tr>
                          <tr class=" opacity-80" style="background: #008000;">

                            <th scope="col" colspan="2" class="text-center text-white">
                                REF
                            </th>

                            <th scope="col" colspan="2" class="text-center text-white">
                                Libellé
                            </th>
                            <th colspan="3" scope="col" class="text-center text-white">
                              NET1
                            </th>
                            <th colspan="3" scope="col" class="text-center text-white">
                              NET2
                            </th>
                          </tr>
                    </thead>

                    <!-- debut tbody inputs -->
                    <tbody id="tbody">
                
                    
                    
                    </tbody>
                    <!-- end tbody -->
                </table> </br>
                <div class="d-flex flex-wrap gap-2 justify-content-center">
                   <button type="button" class="btn btn-secondary waves-effect waves-light">
                       <i class="bx bx-error font-size-16 align-middle me-2"></i> Effacer les données
                   </button>
                   <button type="submit" class="btn btn-success waves-effect waves-light ">
                       <i class="bx bx-check-double font-size-16 align-middle me-2"></i> Sauvegarder
                   </button>
                   <button type="button" class="btn btn-dark bt-soft waves-effect waves-light validerPassif"
                    id="valider">
                       <i class="bx bx-block font-size-16 align-middle me-2"></i> Valider la saisie
                   </button>
               </div>
            </div>
         </div>

         </div>
            <!-- <input type="hidden" name="type" value="1" >
            <button type="submit" class="btn btn-success waves-effect waves-light">
                <i class="bx bx-check-double font-size-16 align-middle me-2"></i> Sauvegarder
            </button> -->
                         
        </div>
        </form>
</div>

<!-- end formulaire -->

</div>
</div>

{% endblock %}


{% block javascript %}
<script src="{{ asset('admin/dist/assets/libs/sweetalert2/sweetalert2.min.js')}}"></script>

  <!-- Sweet alert init js-->
<script src="{{ asset('admin/dist/assets/js/pages/sweet-alerts.init.js')}}"></script>

<script src="{{ asset('admin/dist/assets/libs/admin-resources/rwd-table/rwd-table.min.js')}}"></script>

        <!-- Init js -->
<script src="{{ asset('admin/dist/assets/js/pages/table-responsive.init.js')}}"></script>


<script type="text/javascript">


    $(document).ready(function(){
   
       {% if app.session.get("codeCuci")!=""%}
        
          var value='{{app.session.get("codeCuci")}}';
      
          document.getElementById('idcuci').setAttribute('value',value);
      
          let route="{{path('cucicodeNum')}}"+"/"+ $('#idcuci').val();
   
                  $.ajax({
                      type: 'GET',
                      url : route,
                      dataType : "json",
                      success: function(data){
                          
                          let denomination=document.getElementById("denomination");
                          denomination.value=data;
      
                        
                      } ,
                      error : function(error){
                          console.log(error);
                      }
          })
      
       {% endif %}
      
    });

    $('#idcuci').change(function(){
        
        let route="{{path('cucicodeNum')}}"+"/"+ $('#idcuci').val();
        $.ajax({
            type: 'GET',
            url : route,
            dataType : "json",
            processData: false,
            contentType: false,
            cache: false,
            timeout: 800000,
            success: function(data){
                
                let denomination=document.getElementById("denomination");
                denomination.value=data;
                
                
            } ,
            error : function(error){
                console.log(error);
            }
        })
    });


    ////// ecouteur sur le input annee fin generer le formulaire
    $('#annee').change(function(e){

        e.preventDefault();
            
        let route="{{path('fluxtresorjson')}}"+"/"+ $('#annee').val(); 
        
        $.ajax({
            type: 'GET',
            url : route,
            dataType : "json",
            processData: false,
            contentType: false,
            cache: false,
            timeout: 800000,
            success: function(data){
                var tbody=document.getElementById("tbody");
                var ann=document.getElementById("annee");
                var anneeN_1=document.getElementById("anneeN-1");
                var anneeN=document.getElementById("anneeN");
                tbody.innerHTML="";
                ann.innerHTML="";
                anneeN.value = ann.value;
                anneeN.setAttribute('value', anneeN.value);
                anneeN.innerHTML=anneeN.value;
                anneeN_1.innerHTML=anneeN.value-1;

                ////////
                //console.log(data[2]); return;                

                for (var i = data[2].length - 1; i >= 0; i--) {
                    

                    for (var j = data[1].length - 1; j >= 0; j--) {
                                  
                        if (data[2][i][0]==data[1][j][2]) {

                            var tr=document.createElement('tr');
                            var td1=document.createElement('td');
                            var td2=document.createElement('td');

                            var td5=document.createElement('td');
                            var td6=document.createElement('td');

                            td1.setAttribute('colspan',2); 
                            td1.setAttribute('scope',"col"); 
                            td1.setAttribute('class',"text-center form");           
                            td1.innerHTML=  data[1][j][0];
                            tr.appendChild(td1) ;
                            
                            td2.setAttribute('colspan',2); 
                            td2.setAttribute('class',"text-center form");           
                            td2.setAttribute('scope',"col"); 
                                      
                            td2.innerHTML=  data[1][j][1];
                            tr.appendChild(td2) ;


                            td5.setAttribute('colspan',3); 
                            td5.setAttribute('scope',"col"); 
                            td5.setAttribute('class',"text-center");
                            var input5=document.createElement('input');
                            input5.setAttribute('type','number'); 
                            input5.setAttribute('name',data[1][j][0]+"net1"); 
                            input5.setAttribute('id',data[1][j][0]+"net1"); 
                            input5.setAttribute('class','form-control form-control-sm calcul net1 '+data[1][j][2]); 
                            input5.setAttribute('data-sousclasse',data[1][j][2]);
                            if(data[0][data[1][j][0]]){
                                input5.setAttribute('value',data[0][data[1][j][0]][1]);
                            }

                            // input5.addEventListener ("change", function(e){
                            //     var sousclasse= $(this).data('sousclasse');
                            //     var total = somme($(this).hasClass('net1')? 'net1':'net2',sousclasse);
                            //     
                            //     console.log(total);
                            //     if($(this).hasClass('net1')){
                            //          $('input.total.net1').val(total);
                            //     }else{
                            //         $('input.total.net2').val(total);
                            //     }
                            //    
                            // });
                            td5.appendChild(input5);
                            tr.appendChild(td5) ;
                            


                            td6.setAttribute('colspan',3); 
                            td6.setAttribute('scope',"col"); 
                            td6.setAttribute('class',"text-center");           
                            var input6=document.createElement('input');  
                            input6.setAttribute('class','form-control form-control-sm calcul net2 '+data[1][j][2]); 
                            input6.setAttribute('type','number'); 
                            input6.setAttribute('name',data[1][j][0]+"net2"); 
                            input6.setAttribute('id',data[1][j][0]+"net2"); 
                            input6.setAttribute('data-sousclasse',data[1][j][2]);
                            if(data[0][data[1][j][0]]){
                            input6.setAttribute('value',data[0][data[1][j][0]][2]);
                            }

                            // on commente cette partie pour tester la methode hard
                            //input6.addEventListener ("change", function(e){
                            //    var sousclasse= $(this).data('sousclasse');
                            //    var total = somme($(this).hasClass('net2')? 'net1':'net2',sousclasse);
                            //    console.log(total);
                            //    if($(this).hasClass('net2')){
                            //         $('input.total.net1').val(total);
                            //    }else{
                            //        $('input.total.net2').val(total);
                            //    }
                            //    // my update here 
                            //});
                            td6.appendChild(input6);
                            tr.appendChild(td6) ;


                            tbody.appendChild(tr);  


                        }
                    }
                    
                    var tr=document.createElement('tr');
                    // tr.setAttribute('class',"bg-dark bg-soft opacity-65");                     
                    tr.setAttribute('class'," opacity-65");
                    tr.setAttribute('style',"background: #82C46C;");           

                    var td1=document.createElement('td');
                    var td2=document.createElement('td');
                    var td5=document.createElement('td');
                    var td6=document.createElement('td');

                    td1.setAttribute('colspan',2); 
                    td1.setAttribute('scope',"col"); 
                    td1.setAttribute('class',"text-center form");           
                    td1.innerHTML=  data[2][i][0]; // sont stockés les ref
                    tr.appendChild(td1) ;
                    
                    td2.setAttribute('colspan',2); 
                    td2.setAttribute('class',"text-center form");           
                    td2.setAttribute('scope',"col"); 
                               
                    td2.innerHTML=  data[2][i][1]; // sont stockes les libelles
                    tr.appendChild(td2) ;


                    td5.setAttribute('colspan',3); 
                    td5.setAttribute('scope',"col"); 
                    td5.setAttribute('class',"text-center");
                    var input1=document.createElement('input'); 
                    input1.setAttribute('type','number'); 
                    
                    input1.setAttribute('name',data[2][i][0]+"net1"); 
                    input1.setAttribute('id',data[2][i][0]+"net1"); 
                    input1.setAttribute('class','form-control form-control-sm total net1 '+data[2][i][0]);   
                    if(data[0][data[2][i][0]]){
                        input1.setAttribute('value',data[0][data[2][i][0]][1]);
                        // faut appeler la function sum ici
                    }

                    td5.appendChild(input1);
                    tr.appendChild(td5) ;
                    


                    td6.setAttribute('colspan',3); 
                    td6.setAttribute('scope',"col"); 
                    td6.setAttribute('class',"text-center");           
                    var input2=document.createElement('input'); 
                    input2.setAttribute('type','number'); 
                    input2.setAttribute('name',data[2][i][0]+"net2"); 
                    input2.setAttribute('id',data[2][i][0]+"net2"); 
                    input2.setAttribute('class','form-control form-control-sm total net2 '+data[2][i][0]);
                    if(data[0][data[2][i][0]]){
                        input2.setAttribute('value',data[0][data[2][i][0]][2]);
                      }
                            
                    td6.appendChild(input2);
                    tr.appendChild(td6) ;


                    tbody.appendChild(tr);  
                        
                   
                }

                $(".form-control").bind("keypress", function(e) {

                    if (e.keyCode == 13) {
                        var inps = $("input"); //add select too
                        for (var x = 0; x < inps.length; x++) {
                            if (inps[x] == this) {
                                while ((inps[x]).name == (inps[x + 1]).name) {
                                x++;
                                }
                                if ((x + 1) < inps.length) $(inps[x + 1]).focus();
                            }
                        }   e.preventDefault();
                    }
                });
               
            } ,
            error : function(error){
                console.log(error);
            }
        })
    });
    ///// end generer formulaire

    
    // javascript function to verify integer value is
    function isInt(value) {
        return !isNaN(value) && 
               parseInt(Number(value)) == value ;
    }

    $('#valider').click(function(e){

        e.preventDefault();

        var swalMsg = "Verifier les valeurs NET saisie pour ";
        
        var tagnet,net=0,somme=0, valider=1;
        {% for tag in refAgg%}

           console.log('{{tag.code}}');
       

        {% endfor %}


        
        // traitement sum Flux de trésorerie provenant des activités opérationnelles 
        // ZB=FA-FB-FC-FD+FE
        
        var sumZB = 0; 
        if(isInt(document.getElementById('FAnet1').value) == true){

            sumZB = sumZB+parseInt(document.getElementById('FAnet1').value);

        }
        if(isInt(document.getElementById('FBnet1').value) == true ){

            sumZB =sumZB-parseInt(document.getElementById('FBnet1').value); 
                    
        }

        if(isInt(document.getElementById('FCnet1').value) == true ){
            sumZB =sumZB-parseInt(document.getElementById('FCnet1').value); 

        }

        if(isInt(document.getElementById('FDnet1').value == true)){
            sumZB =sumZB-parseInt(document.getElementById('FDnet1').value); 

        }

        if(isInt(document.getElementById('FEnet1').value == true)){
            sumZB =sumZB+parseInt(document.getElementById('FEnet1').value); 

        }


        var zb = 0;
        if(isInt(document.getElementById('ZBnet1').value) == true){
            zb = parseInt(document.getElementById('ZBnet1').value);
        }
        
        var testVar1 = "Flux de trésorerie provenant des activités opérationnelles ZB = FA-FB-FC-FD+FE !";
        if(zb != sumZB){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        // traitement sum Flux  de trésorerie provenant des activités d'investissement
        // sumZC = FI+FJ-FF-FG-FH
        
        var sumZC = 0; 
        if(isInt(document.getElementById('FInet1').value) == true){

            sumZC = sumZC+parseInt(document.getElementById('FInet1').value);

        }
        if(isInt(document.getElementById('FJnet1').value) == true ){

            sumZC =sumZC+parseInt(document.getElementById('FJnet1').value); 
                    
        }

        if(isInt(document.getElementById('FFnet1').value) == true ){
            sumZC =sumZC-parseInt(document.getElementById('FFnet1').value); 

        }

        if(isInt(document.getElementById('FGnet1').value == true)){
            sumZC =sumZC-parseInt(document.getElementById('FGnet1').value); 

        }

        if(isInt(document.getElementById('FHnet1').value == true)){
            sumZC =sumZC-parseInt(document.getElementById('FHnet1').value); 

        }


       var zc = 0;
        if(isInt(document.getElementById('ZCnet1').value) == true){
            zc = parseInt(document.getElementById('ZCnet1').value);
        }
        
        var testVar1 = "Flux  de trésorerie provenant des activités d'investissement ZC = FI+FJ-FF-FG-FH !";
        if(zc != sumZC){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        
        // traitement sum Flux  de trésorerie provenant du financement par les capitaux propres
        // sumZD = FK+FL-FM-FN
        
        var sumZD = 0; 
        if(isInt(document.getElementById('FKnet1').value) == true){

            sumZD = sumZD+parseInt(document.getElementById('FKnet1').value);

        }
        if(isInt(document.getElementById('FLnet1').value) == true ){

            sumZD =sumZD+parseInt(document.getElementById('FLnet1').value); 
                    
        }

        if(isInt(document.getElementById('FMnet1').value) == true ){
            sumZD =sumZD-parseInt(document.getElementById('FMnet1').value); 

        }

        if(isInt(document.getElementById('FNnet1').value == true)){
            sumZD =sumZD-parseInt(document.getElementById('FNnet1').value); 

        }


       var zd = 0;
        if(isInt(document.getElementById('ZDnet1').value) == true){
            zd = parseInt(document.getElementById('ZDnet1').value);
        }
        
        var testVar1 = "Flux  de trésorerie provenant du financement par les capitaux propres ZD = FK+FL-FM-FN !";
        if(zd != sumZD){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        //// traitement sum Flux  de trésorerie provenant du financement par les capitaux étrangers
        //   sumZE=FO+FP-FQ

        
        var sumZE = 0; 
        if(isInt(document.getElementById('FOnet1').value) == true){

            sumZE = sumZE+parseInt(document.getElementById('FOnet1').value);

        }
        if(isInt(document.getElementById('FPnet1').value) == true ){

            sumZE =sumZE+parseInt(document.getElementById('FPnet1').value); 
                    
        }

        if(isInt(document.getElementById('FQnet1').value) == true ){
            sumZE =sumZE-parseInt(document.getElementById('FQnet1').value); 

        }


       var ze = 0;
        if(isInt(document.getElementById('ZEnet1').value) == true){
            ze = parseInt(document.getElementById('ZEnet1').value);
        }
        
        var testVar1 = "Flux  de trésorerie provenant du financement par les capitaux étrangers ZE=FO+FP-FQ !";
        if(ze != sumZE){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        ///// traitement sum Flux  de trésorerie provenant des capitaux étrangers
        // sumZF=ZD+ZE
        
        var sumZF = 0; 
        if(isInt(document.getElementById('ZDnet1').value) == true){

            sumZF = sumZF+parseInt(document.getElementById('ZDnet1').value);

        }
        if(isInt(document.getElementById('ZEnet1').value) == true ){

            sumZF =sumZF+parseInt(document.getElementById('ZEnet1').value); 
                    
        }


       var zf = 0;
        if(isInt(document.getElementById('ZFnet1').value) == true){
            zf = parseInt(document.getElementById('ZFnet1').value);
        }
        
        var testVar1 = "Flux  de trésorerie provenant des capitaux étrangers ZF=ZD+ZE !";
        if(zf != sumZF){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        ///// traitement sum VARIATION DE LA TRESORERIE NETTE DE LA PERIODE
        // sumZG = ZB+ZC+ZF
        
        var sumZG = 0; 
        if(isInt(document.getElementById('ZBnet1').value) == true){

            sumZG = sumZG+parseInt(document.getElementById('ZBnet1').value);

        }
        if(isInt(document.getElementById('ZCnet1').value) == true ){

            sumZG =sumZG+parseInt(document.getElementById('ZCnet1').value); 
                    
        }
        if(isInt(document.getElementById('ZFnet1').value) == true ){

            sumZG =sumZG+parseInt(document.getElementById('ZFnet1').value); 
                    
        }


        var zg = 0;
        if(isInt(document.getElementById('ZGnet1').value) == true){
            zg = parseInt(document.getElementById('ZGnet1').value);
        }
        
        var testVar1 = "VARIATION DE LA TRESORERIE NETTE DE LA PERIODE ZG = ZB+ZC+ZF !";
        if(zg != sumZG){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        ///// traitement sum Trésorerie nette au 31 décembre
        // sumZH=ZG+ZA
        
        var sumZH = 0; 
        if(isInt(document.getElementById('ZGnet1').value) == true){

            sumZH = sumZH+parseInt(document.getElementById('ZGnet1').value);

        }
        if(isInt(document.getElementById('ZAnet1').value) == true ){

            sumZH =sumZH+parseInt(document.getElementById('ZAnet1').value); 
                    
        }


        var zh = 0;
        if(isInt(document.getElementById('ZHnet1').value) == true){
            zh = parseInt(document.getElementById('ZHnet1').value);
        }
        
        var testVar1 = "Trésorerie nette au 31 décembre ZH = ZG+ZA !";
        if(zh != sumZH){

            valider=0;

            Swal.fire('Verifier les valeurs NET saisie pour '+ testVar1); 
            return ;
                     
        }

        
        if (valider==1) {
            
            
            //// ici traitement de sumZA Trésorerie nette au 1er janvier
            // sumZA = tresorerie actif n-1(BT) - tresorerie passif n-1(DT) 
            
                     
            let route="{{path('sumZA')}}"+"/"+ $('#idcuci').val();
            $.ajax({
                   type: 'GET',
                   url : route,
                   dataType : "json",
                   processData: false,
                   contentType: false,
                   cache: false,
                   timeout: 800000,
                   success: function(data){ 

                        //if(JSON.stringify(data) === JSON.stringify(xin)){

                       if(parseInt (data) != parseInt(document.getElementById('ZAnet1').value) ){
                              
                           valider=0;
                           Swal.fire('Verifier les valeurs NET saisies pour Trésorerie nette au 1er janvier ZA = tresorerie actif n-1(BT) - tresorerie passif n-1(DT) '); return;
                       }else{

                           {
                           e.preventDefault();
                           var a=$(this);
                           Swal.fire({
                           title:"Confirmation",
                           text:"Êtes-vous sûr de vouloir sauvegarder les données de cet enrégistrement ?",
                           icon:"success",
                           showCancelButton:true,
                           confirmButtonText:"Oui",
                           cancelButtonText:"Non",
                           confirmButtonClass:"btn btn-success mt-2",
                           cancelButtonClass:"btn btn-danger ms-2 mt-2",
                           buttonsStyling:!1}).then(function(t)
                           {
                             if (t.value) {
                                document.getElementById("idformcompte").submit()
                             }else
                                 e.preventDefault();
           
                           })}
                       }
                                          
                       
                   } ,
                   error : function(error){
                       console.log(error);
                   }
               });

        }
    });

</script>



{% endblock %}
