<?php

namespace App\Controller;

use App\Entity\NiNatureLocaliteExploitation;
use App\Form\NiNatureLocaliteExploitationType;
use App\Repository\NiNatureLocaliteExploitationRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;

/**
 * @Route("/ni/nature/localite/exploitation")
 * @Security(" is_granted('ROLE_USER')")

 */
class NiNatureLocaliteExploitationController extends AbstractController
{
    /**
     * @Route("/", name="app_ni_nature_localite_exploitation_index", methods={"GET"})
     */
    public function index(NiNatureLocaliteExploitationRepository $niNatureLocaliteExploitationRepository): Response
    {
        return $this->render('ni_nature_localite_exploitation/index.html.twig', [
            'ni_nature_localite_exploitations' => $niNatureLocaliteExploitationRepository->findAll(),
        ]);
    }

    /**
     * @Route("/new", name="app_ni_nature_localite_exploitation_new", methods={"GET", "POST"})
     */
    public function new(Request $request, EntityManagerInterface $entityManager): Response
    {
        $niNatureLocaliteExploitation = new NiNatureLocaliteExploitation();
        $form = $this->createForm(NiNatureLocaliteExploitationType::class, $niNatureLocaliteExploitation);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->persist($niNatureLocaliteExploitation);
            $entityManager->flush();

            return $this->redirectToRoute('app_ni_nature_localite_exploitation_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('ni_nature_localite_exploitation/new.html.twig', [
            'ni_nature_localite_exploitation' => $niNatureLocaliteExploitation,
            'form' => $form,
        ]);
    }

    /**
     * @Route("/{id}", name="app_ni_nature_localite_exploitation_show", methods={"GET"})
     */
    public function show(NiNatureLocaliteExploitation $niNatureLocaliteExploitation): Response
    {
        return $this->render('ni_nature_localite_exploitation/show.html.twig', [
            'ni_nature_localite_exploitation' => $niNatureLocaliteExploitation,
        ]);
    }

    /**
     * @Route("/{id}/edit", name="app_ni_nature_localite_exploitation_edit", methods={"GET", "POST"})
     */
    public function edit(Request $request, NiNatureLocaliteExploitation $niNatureLocaliteExploitation, EntityManagerInterface $entityManager): Response
    {
        $form = $this->createForm(NiNatureLocaliteExploitationType::class, $niNatureLocaliteExploitation);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $entityManager->flush();

            return $this->redirectToRoute('app_ni_nature_localite_exploitation_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('ni_nature_localite_exploitation/edit.html.twig', [
            'ni_nature_localite_exploitation' => $niNatureLocaliteExploitation,
            'form' => $form,
        ]);
    }

    /**
     * @Route("/{id}", name="app_ni_nature_localite_exploitation_delete", methods={"POST"})
     */
    public function delete(Request $request, NiNatureLocaliteExploitation $niNatureLocaliteExploitation, EntityManagerInterface $entityManager): Response
    {
        if ($this->isCsrfTokenValid('delete'.$niNatureLocaliteExploitation->getId(), $request->request->get('_token'))) {
            $entityManager->remove($niNatureLocaliteExploitation);
            $entityManager->flush();
        }

        return $this->redirectToRoute('app_ni_nature_localite_exploitation_index', [], Response::HTTP_SEE_OTHER);
    }
}
