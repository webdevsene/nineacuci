<?php

namespace App\Controller;

use App\Entity\NiModaliteexploitation;
use App\Form\NiModaliteexploitationType;
use App\Repository\NiModaliteexploitationRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;

/**
 * @Route("/ni/modaliteexploitation")
 * @Security(" is_granted('ROLE_USER')")

 */
class NiModaliteexploitationController extends AbstractController
{
    /**
     * @Route("/", name="app_ni_modaliteexploitation_index", methods={"GET"})
     */
    public function index(NiModaliteexploitationRepository $niModaliteexploitationRepository): Response
    {
        return $this->render('ni_modaliteexploitation/index.html.twig', [
            'ni_modaliteexploitations' => $niModaliteexploitationRepository->findAll(),
        ]);
    }

    /**
     * @Route("/new", name="app_ni_modaliteexploitation_new", methods={"GET", "POST"})
     */
    public function new(Request $request, NiModaliteexploitationRepository $niModaliteexploitationRepository): Response
    {
        $niModaliteexploitation = new NiModaliteexploitation();
        $form = $this->createForm(NiModaliteexploitationType::class, $niModaliteexploitation);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $niModaliteexploitationRepository->add($niModaliteexploitation, true);

            return $this->redirectToRoute('app_ni_modaliteexploitation_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('ni_modaliteexploitation/new.html.twig', [
            'ni_modaliteexploitation' => $niModaliteexploitation,
            'form' => $form,
        ]);
    }

    /**
     * @Route("/{id}", name="app_ni_modaliteexploitation_show", methods={"GET"})
     */
    public function show(NiModaliteexploitation $niModaliteexploitation): Response
    {
        return $this->render('ni_modaliteexploitation/show.html.twig', [
            'ni_modaliteexploitation' => $niModaliteexploitation,
        ]);
    }

    /**
     * @Route("/{id}/edit", name="app_ni_modaliteexploitation_edit", methods={"GET", "POST"})
     */
    public function edit(Request $request, NiModaliteexploitation $niModaliteexploitation, NiModaliteexploitationRepository $niModaliteexploitationRepository): Response
    {
        $form = $this->createForm(NiModaliteexploitationType::class, $niModaliteexploitation);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $niModaliteexploitationRepository->add($niModaliteexploitation, true);

            return $this->redirectToRoute('app_ni_modaliteexploitation_index', [], Response::HTTP_SEE_OTHER);
        }

        return $this->renderForm('ni_modaliteexploitation/edit.html.twig', [
            'ni_modaliteexploitation' => $niModaliteexploitation,
            'form' => $form,
        ]);
    }

    /**
     * @Route("/{id}", name="app_ni_modaliteexploitation_delete", methods={"POST"})
     */
    public function delete(Request $request, NiModaliteexploitation $niModaliteexploitation, NiModaliteexploitationRepository $niModaliteexploitationRepository): Response
    {
        if ($this->isCsrfTokenValid('delete'.$niModaliteexploitation->getId(), $request->request->get('_token'))) {
            $niModaliteexploitationRepository->remove($niModaliteexploitation, true);
        }

        return $this->redirectToRoute('app_ni_modaliteexploitation_index', [], Response::HTTP_SEE_OTHER);
    }
}
