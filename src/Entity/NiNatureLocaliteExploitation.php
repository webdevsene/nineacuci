<?php

namespace App\Entity;

use App\Repository\NiNatureLocaliteExploitationRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;

/**
 * @ORM\Entity(repositoryClass=NiNatureLocaliteExploitationRepository::class)
 * @ORM\Table(name="`ni_nature`")
 */
class NiNatureLocaliteExploitation
{
    /**
     * @ORM\Id
     * @ORM\Column(type="string", length=10)

     */
    private $id;

  
    /**
     * @ORM\Column(type="string", length=100, name="nin_Naturelibelle")
     */
    private $nleLibelle;

   

    /**
     * @ORM\OneToMany(targetEntity=NiActiviteEconomique::class, mappedBy="ninNature")
     */
    private $niActiviteEconomiques;

    /**
     * @ORM\OneToMany(targetEntity=TempNiActiviteEconomique::class, mappedBy="ninNature")
     */
    private $tempNiActiviteEconomiques;

    /**
     * @ORM\OneToMany(targetEntity=HistoryNiActiviteEconomique::class, mappedBy="ninNature")
     */
    private $historyNiActiviteEconomiques;

    public function __construct()
    {
      
        $this->niActiviteEconomiques = new ArrayCollection();
        $this->tempNiActiviteEconomiques = new ArrayCollection();
        $this->historyNiActiviteEconomiques = new ArrayCollection();
    }

  
    public function getId(): ?string
    {
        return $this->id;
    }

    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }

    public function getNleCode(): ?string
    {
        return $this->nleCode;
    }

    public function setNleCode(?string $nleCode): self
    {
        $this->nleCode = $nleCode;

        return $this;
    }

    public function getNleLibelle(): ?string
    {
        return $this->nleLibelle;
    }

    public function setNleLibelle(string $nleLibelle): self
    {
        $this->nleLibelle = $nleLibelle;

        return $this;
    }

 


    public function __toString()
    {
        return $this->nleLibelle;
    }



    /**
     * @return Collection<int, NiActiviteEconomique>
     */
    public function getNiActiviteEconomiques(): Collection
    {
        return $this->niActiviteEconomiques;
    }

    public function addNiActiviteEconomique(NiActiviteEconomique $niActiviteEconomique): self
    {
        if (!$this->niActiviteEconomiques->contains($niActiviteEconomique)) {
            $this->niActiviteEconomiques[] = $niActiviteEconomique;
            $niActiviteEconomique->setNinNature($this);
        }

        return $this;
    }

    public function removeNiActiviteEconomique(NiActiviteEconomique $niActiviteEconomique): self
    {
        if ($this->niActiviteEconomiques->removeElement($niActiviteEconomique)) {
            // set the owning side to null (unless already changed)
            if ($niActiviteEconomique->getNinNature() === $this) {
                $niActiviteEconomique->setNinNature(null);
            }
        }

        return $this;
    }

    /**
     * @return Collection<int, TempNiActiviteEconomique>
     */
    public function getTempNiActiviteEconomiques(): Collection
    {
        return $this->tempNiActiviteEconomiques;
    }

    public function addTempNiActiviteEconomique(TempNiActiviteEconomique $tempNiActiviteEconomique): self
    {
        if (!$this->tempNiActiviteEconomiques->contains($tempNiActiviteEconomique)) {
            $this->tempNiActiviteEconomiques[] = $tempNiActiviteEconomique;
            $tempNiActiviteEconomique->setNinNature($this);
        }

        return $this;
    }

    public function removeTempNiActiviteEconomique(TempNiActiviteEconomique $tempNiActiviteEconomique): self
    {
        if ($this->tempNiActiviteEconomiques->removeElement($tempNiActiviteEconomique)) {
            // set the owning side to null (unless already changed)
            if ($tempNiActiviteEconomique->getNinNature() === $this) {
                $tempNiActiviteEconomique->setNinNature(null);
            }
        }

        return $this;
    }

    /**
     * @return Collection<int, HistoryNiActiviteEconomique>
     */
    public function getHistoryNiActiviteEconomiques(): Collection
    {
        return $this->historyNiActiviteEconomiques;
    }

    public function addHistoryNiActiviteEconomique(HistoryNiActiviteEconomique $historyNiActiviteEconomique): self
    {
        if (!$this->historyNiActiviteEconomiques->contains($historyNiActiviteEconomique)) {
            $this->historyNiActiviteEconomiques[] = $historyNiActiviteEconomique;
            $historyNiActiviteEconomique->setNinNature($this);
        }

        return $this;
    }

    public function removeHistoryNiActiviteEconomique(HistoryNiActiviteEconomique $historyNiActiviteEconomique): self
    {
        if ($this->historyNiActiviteEconomiques->removeElement($historyNiActiviteEconomique)) {
            // set the owning side to null (unless already changed)
            if ($historyNiActiviteEconomique->getNinNature() === $this) {
                $historyNiActiviteEconomique->setNinNature(null);
            }
        }

        return $this;
    }

  
}
